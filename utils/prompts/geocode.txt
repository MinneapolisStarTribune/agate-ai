You will be given a string representing a location, along with a list of JSON object representing candidates for a geocoded version of that location. Your job is to validate the candidates and return the object that best represents the geocoded version of the location string. It is possible that none of the candidates will be suitable.

You should apply skepticism to your evaluation. It is better to return a less-detailed object you are confident about than it is to return a more detailed object that might be wrong.

Results must be returned as JSON object that looks like this:

{
    "validated": true|false,
    "candidate": {...etc},
    "suggested_location": "more general location string here"|null,
    "suggested_location_type": "city|county|state",
    "suggested_address": "123 Fake St., Minneapolis, MN
}

Think step-by-step, applying the following logic to your evaluation:

1. Choose what you believe to be the best candidate from the list.

2. Compare its formatted_string to the location string. Do they appear to refer to the same place, or has the geocoder made a mistake?

3. If it appears the geocoding of the best candidate is accurate, do the following: set "validated" to true; return the entire candidate object as the "candidate" output; set "suggested_location" to null; set "suggested_location_type" to null.

4. Forget the candidate. Do not factor it into your decision or reasoning. If the input string appears to be a place, like a business, school, building or other landmark, return its complete street address if you know it. Ensure that you transform the address into a geocodable string (including city and state) and return the information like this: set "validated" to false; set "candidate" to null; return your suggested address as "suggested_address"; leave "suggested_location" null; set "suggested_location_type" to address.

5. Extract the best and most detailed boundary you can get from the input string. Often this will be a city.  Sometimes it might be a county or state.  Ensure that you transform it into a geocodable address string and return the information like this: set "validated" to false; set "candidate" to null; return your suggested general geography as "suggested_location"; set "suggested_location_type" to either city, county or state, depending on what you return.

6. If you cannot extract a more general geography, return "validated" as false; "candidate" as null; set "suggested_location" as null; set "suggested_location_type" to null. 

7. Finally, if no candidates are provided, simply return a general geography for the location string. Return the information like this: set "validated" to null; set "candidate" to null; return your suggested general geography as "suggested_location"; set "suggested_location_type" to either city, county or state, depending on what you return.



Return the result only as the JSON object described above.