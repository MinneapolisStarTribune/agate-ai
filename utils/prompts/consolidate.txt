You will be given a list of geographies, each with a description and a list of attributes. You will also be given the text of a news story.

Consolidate any duplicate geographies you see and ensure they are returned as lists of distinct states, regions, counties, cities, neighborhoods and places.

Each geography should contain the following attributes, which can be copied from the input JSON:

id: Either the "id" or "google_place_id" of the location object, depending on whether it is a boundary or place

type: The type of place, which can be place, address_intersection, street_road, span, neighborhood, city, county, region_state, state, region_national, country ot other.

importance: The importance of the place relative to the events of the story. This should be either "primary" or "secondary". Primary locations at which the news event or news events described in the story took place; locations that describe buildings, businesses or places that are the subjects of the story, or are relevant to the events of the story; or places that are directly affected by policies, legislation or issues that are central to the story. Secondary locations include ;ocations that a person in the story is from, or is in some way related to; locations of direct observations, interviews and descriptions used in the story; locations that are cited in studies, reports or other documents that are the subject of the story; or locations that are cited for context or other reasons but are not central to the events of the story. These can be inferred both from the text of the story and the "importance" attributes in each "mention" object attached to the geography.

lat and lng: The latitude and longitude of either the centroid (in the case of a boundary) or the place itself (in the case of a place). Should be returned in a subobject called "coordinates".

precision: Either "CENTROID" in the case of a boundary or the value of the "google_precision" field in the case of a place.

geocoded_address: The value of the "formatted_address" field in the case of a place. Only return this for places.

The response should also include a "description" field that summarizes all the ways the geography is relevant to the story. That includes people who are from there, scenes or descriptions from that place, events that took place in or affected the area, etc.

The description can be based on the text of the story, as well as the "description" fields included in the mentions for each geography.

Return the result in a JSON format that generally looks like this:

  {
      "locations": {
          "states": [
              {
                  "id": "XXXXXX",
                  "name": "Minnesota",
                  "type": "state",
                  "importance": "primary",
                  "description": "Lorem ipsum,"
                  "importance": "XXX",
                  "geography": {
                      "precision": "CENTROID",
                      "geocoded_address": "Minnesota, USA",
                      "coordinates": {
                          "lat": 44.9777,
                          "lng": -93.2644
                      }
                  }
              }
          ],
          "regions": [
              {
                  "id": "XXXXXX",
                  "name": "Twin Cities Metro",
                  "type": "region",
                  "importance": "primary",
                  ...etc}
          ],
          "counties": [
              {
                  "id": "XXXXXX",
                  "name": "Hennepin",
                  "type": "county",
                  "importance": "primary",
                  ...etc}
          ],
          "cities": [
              {
                  "id": "XXXXXX",
                  "name": "Minneapolis",
                  "type": "city",
                  "importance": "primary",
                  ...etc}
          ],
          "neighborhoods": [
              {
                  "id": "XXXXXX",
                  "name": "Uptown",
                  "type": "neighborhood"
                  "importance": "primary",
                  ...etc}
          ],
          "places": [
              {
                  "id": "XXXXXX",
                  "type": "street_road",
                  "name": "123 Fake St.",
                  "importance": "secondary",
                  ...etc}
          ]
      }
  }

